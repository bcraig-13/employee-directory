{"version":3,"sources":["components/Employee.js","index.js"],"names":["Employee","props","state","error","isLoaded","query","emps","fetch","then","res","json","result","setState","results","console","log","phone","e","this","target","value","length","type","onChange","changeInput","bind","filter","emp","name","first","includes","last","map","idx","src","picture","medium","alt","email","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAmEeA,E,kDAhEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,GACPC,KAAM,IANS,E,qDAWnB,WAAqB,IAAD,OAClBC,MAAM,sEACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZR,UAAU,EACVE,KAAMK,EAAOE,UAEfC,QAAQC,IAAI,EAAKb,MAAMI,KAAK,GAAGU,Y,yBAIrC,SAAYC,GACVC,KAAKN,SAAS,CAACP,MAAOY,EAAEE,OAAOC,U,oBAGjC,WAAU,IAAD,OACP,OAAkC,IAA3BF,KAAKhB,MAAMI,KAAKe,OACrB,8BACE,6CAGF,gCACE,uBAAOD,MAAOF,KAAKhB,MAAMG,MAAOiB,KAAK,OAAOC,SAAUL,KAAKM,YAAYC,KAAKP,QAC5E,kCACE,gCACE,+BACE,yCACA,sCACA,uCACA,4CAGJ,gCACGA,KAAKhB,MAAMI,KAAKoB,QAAO,SAACC,GAAD,OAASA,EAAIC,KAAKC,MAAMC,SAAS,EAAK5B,MAAMG,QAAUsB,EAAIC,KAAKG,KAAKD,SAAS,EAAK5B,MAAMG,UAAQ2B,KAAI,SAACL,EAAKM,GAChI,OACE,+BACE,6BAAI,qBAAKC,IAAKP,EAAIQ,QAAQC,OAAQC,IAAKV,EAAIC,SAC3C,+BACGD,EAAIC,KAAKC,MADZ,IACoBF,EAAIC,KAAKG,QAE7B,6BAAKJ,EAAIX,QACT,6BAAKW,EAAIW,UANFL,kB,GAhDFM,aCSvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3abbaa45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Employee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      query: \"\",\r\n      emps: [],\r\n    };\r\n  }\r\n\r\n  //Calls api once? Can get my results back but need to put them into vars\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?results=10&inc=picture,name,phone,email\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          emps: result.results,\r\n        });\r\n        console.log(this.state.emps[0].phone);\r\n      });\r\n  }\r\n\r\n  changeInput(e) {\r\n    this.setState({query: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return this.state.emps.length === 0 ? (\r\n      <div>\r\n        <p>Loading...</p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <input value={this.state.query} type=\"text\" onChange={this.changeInput.bind(this)} />\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Picture</th>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.emps.filter((emp) => emp.name.first.includes(this.state.query) || emp.name.last.includes(this.state.query)).map((emp, idx) => {\r\n              return (\r\n                <tr key={idx}>\r\n                  <td><img src={emp.picture.medium} alt={emp.name} /></td>\r\n                  <td>\r\n                    {emp.name.first} {emp.name.last}\r\n                  </td>\r\n                  <td>{emp.phone}</td>\r\n                  <td>{emp.email}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Employee from \"./components/Employee\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n// const fName = \"Cloud\";\r\n// const phoneNum = \"FF7-1997\";\r\n// const eMail = \"bustersword@shinra.com\";\r\n// name={`${fName}`} phone={`${phoneNum}`} email={`${eMail}`}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Employee />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your Employee, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}